version: '3'
services:
  watashi-nginx:
    image: nginx:alpine
    container_name: 'watashi-nginx'
    ports:
      - "80:80"
      - "443:443"
    expose:
      - 80
      - 443
    volumes:
      - /docker/letsencrypt-docker-nginx/src/production/production-site:/usr/share/nginx/html
      - /docker/letsencrypt-docker-nginx/src/production/dh-param:/etc/ssl/certs
      - /docker/letsencrypt-docker-nginx/src/production/nginx.conf:/etc/nginx/nginx.conf
      - /docker-volumes/etc/letsencrypt/live/watashiengine.com/fullchain.pem:/etc/letsencrypt/live/watashiengine.com/fullchain.pem
      - /docker-volumes/etc/letsencrypt/live/watashiengine.com/privkey.pem:/etc/letsencrypt/live/watashiengine.com/privkey.pem
      - /docker-volumes/data/letsencrypt:/data/letsencrypt
    networks:
      - docker-network
    restart: always
    depends_on:
      - watashi-postgres
      - watashi-api

  watashi-api:
    image: dottjt/watashi-api
    container_name: 'watashi-api'
    ports:
      - 4000:4000
    networks:
      - docker-network
    depends_on:
      - watashi-postgres
    environment:
      - TYPEORM_CONNECTION = postgres
      - TYPEORM_HOST = localhost
      - TYPEORM_USERNAME = deploy
      - TYPEORM_PASSWORD = deploy
      - TYPEORM_DATABASE = watashi_api
      - TYPEORM_PORT = 5432
      - TYPEORM_SYNCHRONIZE = true
      - TYPEORM_LOGGING = false
      - TYPEORM_ENTITIES = src/entity/**/*.ts
      - TYPEORM_MIGRATIONS = src/migration/**/*.ts
      - TYPEORM_SUBSCRIBERS = src/subscriber/**/*.ts

  watashi-postgres:
    image: postgres:alpine
    container_name: 'watashi-postgres'
    ports:
      - 5432:5432
    volumes:
      - ./watashi-postgres:/var/lib/postgresql/data:rw
    restart: always
    environment:
      - POSTGRES_USER=deploy
      - POSTGRES_PASSWORD=deploy
      - POSTGRES_DB=watashi_api

networks:
  docker-network:
    driver: bridge
